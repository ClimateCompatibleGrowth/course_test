{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Test Course for the Teaching Kit A course consists of 60 hours of study split across four types of study: 20 lecture blocks of one hour each, further broken down into 4 mini-lectures, multiple-choice exams and absorption time 10 hours of exercises where the student solves typical problems with the tool 10 hours of tutorials which lead the student through the goal of constructing a simple national model 20 hours (or 100 pages) of reading In this example repository, we demonstrate a minimal working folder structure with one lecture block containing mini-lectures ( lecture_1 , lecture_2 ), quiz and absorption, tutorial , exercises and reading materials. Contents Block Elements Block 1 Lecture 1 Quiz 1 Lecture 2 Tutorial","title":"Home"},{"location":"#test-course-for-the-teaching-kit","text":"A course consists of 60 hours of study split across four types of study: 20 lecture blocks of one hour each, further broken down into 4 mini-lectures, multiple-choice exams and absorption time 10 hours of exercises where the student solves typical problems with the tool 10 hours of tutorials which lead the student through the goal of constructing a simple national model 20 hours (or 100 pages) of reading In this example repository, we demonstrate a minimal working folder structure with one lecture block containing mini-lectures ( lecture_1 , lecture_2 ), quiz and absorption, tutorial , exercises and reading materials.","title":"Test Course for the Teaching Kit"},{"location":"#contents","text":"Block Elements Block 1 Lecture 1 Quiz 1 Lecture 2 Tutorial","title":"Contents"},{"location":"tutorial/","text":"Tutorials Block 1 Complete the CommonMark tutorial [10 minutes]","title":"Tutorials"},{"location":"tutorial/#tutorials","text":"","title":"Tutorials"},{"location":"tutorial/#block-1","text":"Complete the CommonMark tutorial [10 minutes]","title":"Block 1"},{"location":"block_1/lecture_1/","text":"Learning Objectives Understand the overall structure of a course Explain the difference between a lecture block, mini-lecture, exercise, tutorial and reading Lecture Content Structure of a course Introduction A course consists of 60 hours of study. This time is split across four types of study: lectures - 20 hours exercises - 10 hours tutorials - 10 hours reading - 20 hours Lectures A course contains 20 lecture blocks of one hour. Each hour-long block consists of: 4 mini lectures (10 mins each) of around 2.5 pages of text and roughly equivalent to 5 slides of teaching material 4 multiple choice exams (2 mins each) 12 min absorption/reflection/writing exercise Mini-lectures In ten minutes, it is possible to introduce one or two concepts, motivate the importance of the concept, demonstrate the concepts with one or two examples, and conclude. It is important not to try to fit in too much material. Instead focus on clear and precise definitions, good examples and strong motivations. Exercises A course contains 10 hours of practical work and exercises. an exercise consists of a set of questions to reconstruct typical examples in the software tool a quiz is used to grade the outputs of each exercise Tutorials The course contains 10 hours of self-led tutorials These will be a set of questions, but with online help as needed to build elements of a simplified national model with stylised data (or real data if the participants have it). There will be a quiz to grade output. It will have to focus on insights from the tutorials, so as to avoid the need for personalised grading. Reading The course contains 20 hrs reading. Assuming a reading speed of 5 pages per hour, this equates to 100 pages. The material can include background material from relevant open-licensed text books and open-access journal articles. Folder structure A standard folder structure is used to store the course material which follows the course structure we introduced above. When creating your course, you'll need to create files and folders with the exact names, and structure here to ensure that the material is published correctly. \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 block_1 \u2502 \u251c\u2500\u2500 lecture_1.md \u2502 \u251c\u2500\u2500 lecture_2.md \u2502 \u251c\u2500\u2500 lecture_... \u2502 \u251c\u2500\u2500 absorption.md \u2502 \u2514\u2500\u2500 quiz_1.md \u251c\u2500\u2500 block_2 \u2502 \u251c\u2500\u2500 lecture_1.md \u2502 \u251c\u2500\u2500 lecture_2.md \u2502 \u251c\u2500\u2500 absorption.md \u2502 \u2514\u2500\u2500 quiz_1.md \u251c\u2500\u2500 block_... \u251c\u2500\u2500 tutorials.md \u2514\u2500\u2500 exercises.md Summary A course consists of 60 hours of study split across four types of study: 20 lectures of one hour each, further broken down into 4 mini-lectures, multiple-choice exams and absorption time 10 hours of exercises where the student solves typical problems with the tool 10 hours of tutorials which lead the student through the goal of constructing a simple national model 20 hours (or 100 pages) of reading","title":"Lecture 1 - How to structure a course"},{"location":"block_1/lecture_1/#learning-objectives","text":"Understand the overall structure of a course Explain the difference between a lecture block, mini-lecture, exercise, tutorial and reading","title":"Learning Objectives"},{"location":"block_1/lecture_1/#lecture-content","text":"","title":"Lecture Content"},{"location":"block_1/lecture_1/#structure-of-a-course","text":"","title":"Structure of a course"},{"location":"block_1/lecture_1/#introduction","text":"A course consists of 60 hours of study. This time is split across four types of study: lectures - 20 hours exercises - 10 hours tutorials - 10 hours reading - 20 hours","title":"Introduction"},{"location":"block_1/lecture_1/#lectures","text":"A course contains 20 lecture blocks of one hour. Each hour-long block consists of: 4 mini lectures (10 mins each) of around 2.5 pages of text and roughly equivalent to 5 slides of teaching material 4 multiple choice exams (2 mins each) 12 min absorption/reflection/writing exercise","title":"Lectures"},{"location":"block_1/lecture_1/#mini-lectures","text":"In ten minutes, it is possible to introduce one or two concepts, motivate the importance of the concept, demonstrate the concepts with one or two examples, and conclude. It is important not to try to fit in too much material. Instead focus on clear and precise definitions, good examples and strong motivations.","title":"Mini-lectures"},{"location":"block_1/lecture_1/#exercises","text":"A course contains 10 hours of practical work and exercises. an exercise consists of a set of questions to reconstruct typical examples in the software tool a quiz is used to grade the outputs of each exercise","title":"Exercises"},{"location":"block_1/lecture_1/#tutorials","text":"The course contains 10 hours of self-led tutorials These will be a set of questions, but with online help as needed to build elements of a simplified national model with stylised data (or real data if the participants have it). There will be a quiz to grade output. It will have to focus on insights from the tutorials, so as to avoid the need for personalised grading.","title":"Tutorials"},{"location":"block_1/lecture_1/#reading","text":"The course contains 20 hrs reading. Assuming a reading speed of 5 pages per hour, this equates to 100 pages. The material can include background material from relevant open-licensed text books and open-access journal articles.","title":"Reading"},{"location":"block_1/lecture_1/#folder-structure","text":"A standard folder structure is used to store the course material which follows the course structure we introduced above. When creating your course, you'll need to create files and folders with the exact names, and structure here to ensure that the material is published correctly. \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 block_1 \u2502 \u251c\u2500\u2500 lecture_1.md \u2502 \u251c\u2500\u2500 lecture_2.md \u2502 \u251c\u2500\u2500 lecture_... \u2502 \u251c\u2500\u2500 absorption.md \u2502 \u2514\u2500\u2500 quiz_1.md \u251c\u2500\u2500 block_2 \u2502 \u251c\u2500\u2500 lecture_1.md \u2502 \u251c\u2500\u2500 lecture_2.md \u2502 \u251c\u2500\u2500 absorption.md \u2502 \u2514\u2500\u2500 quiz_1.md \u251c\u2500\u2500 block_... \u251c\u2500\u2500 tutorials.md \u2514\u2500\u2500 exercises.md","title":"Folder structure"},{"location":"block_1/lecture_1/#summary","text":"A course consists of 60 hours of study split across four types of study: 20 lectures of one hour each, further broken down into 4 mini-lectures, multiple-choice exams and absorption time 10 hours of exercises where the student solves typical problems with the tool 10 hours of tutorials which lead the student through the goal of constructing a simple national model 20 hours (or 100 pages) of reading","title":"Summary"},{"location":"block_1/lecture_2/","text":"Learning Objectives Explain the rationale for the emphasis on text and images Use basic Markdown syntax to format text, embed an image and link to other pages Edit a Markdown document using the Github website and view your text rendered as a web page Lecture Content ::: notes Material in the teaching kit is stored primarily using text and images. The reason for this is that text allows quick and easy editing. It is possible to track and attribute changes, fix errors and extend the material. Images, graphics, graphs and diagrams are strongly encouraged as they provide a rich source of information, a pleasant break from text and visual stimulus. However, it is slightly harder to track changes to images and update them. Often images are generated using proprietary software, meaning recreating and updating those images requires access to the original sources or files and the software. Other media, such as video, slides, data, and interactive graphs, Jupyter notebooks can be supported by the teaching kit through links to external sites. For example, videos can be hosted on YouTube and linked to a lecture in the teaching kit. In this mini-lecture, we introduce a powerful text formatting technology called \"Markdown\" and show you how to write simply formatted text, link to websites, and embed images. ::: Markdown Syntax ::: notes Markdown is a \"markup language\" which uses symbols to format text. Once you get used to it, markdown is very quick and easy to use, and lets you perform simple formatting tasks as fast as you can type, without the need to click buttons, or worry about margins and text-wrapping. Markdown is automatically understood (parsed) by a number of websites and converted into HTML (hypertext markup language), the basic building block of a website. By writing markdown, a website can render your text as HTML which is then understood by a web browser. In addition, all the styling, spacing and layout is handled by the web-developer allowing you to focus on the content. ::: Bold and italics Type *Italic* or _Italic_ to get Italic Type **Bold** or __Bold__ to get Bold Blockquotes Type > Blockquote to get: Blockquote Headings Use # Heading 1 to ## Heading 2 , ### Heading 3 etc. Links There are two ways to format links: [An inline link](http://a.com) or [Link][1] This is a good way to record references in a lesson [1]: http://b.org Both appear like this . Bullet Lists Bullet lists can be made with asterix: * a * bullet * list or hyphens: - a - bullet - list which render as: a bullet list Numbered Lists A numbered list like so: 1. a 2. numbered 3. list or like so: 1) a 2) numbered 3) list And these render as: 1) a 2) numbered 3) list Horizontal rules You can use a horizontal rule to break up text: --- which looks like this: Code blocks It can be useful to format code or data using code blocks. These are formatted using \"back ticks\" which look like so: `a piece of code` Use triple back ticks around a block of code. Edit a Markdown document using the Github website In this section, we will learn how to edit a Markdown document using the Github website. Summary In this module, we learnt Markdown syntax. We then used the Github website to edit a Markdown document, and publish it online. For more information about Markdown, check out the Commonmark website and complete the tutorial .","title":"Lecture 2 - Creating online teaching material on Github"},{"location":"block_1/lecture_2/#learning-objectives","text":"Explain the rationale for the emphasis on text and images Use basic Markdown syntax to format text, embed an image and link to other pages Edit a Markdown document using the Github website and view your text rendered as a web page","title":"Learning Objectives"},{"location":"block_1/lecture_2/#lecture-content","text":"::: notes Material in the teaching kit is stored primarily using text and images. The reason for this is that text allows quick and easy editing. It is possible to track and attribute changes, fix errors and extend the material. Images, graphics, graphs and diagrams are strongly encouraged as they provide a rich source of information, a pleasant break from text and visual stimulus. However, it is slightly harder to track changes to images and update them. Often images are generated using proprietary software, meaning recreating and updating those images requires access to the original sources or files and the software. Other media, such as video, slides, data, and interactive graphs, Jupyter notebooks can be supported by the teaching kit through links to external sites. For example, videos can be hosted on YouTube and linked to a lecture in the teaching kit. In this mini-lecture, we introduce a powerful text formatting technology called \"Markdown\" and show you how to write simply formatted text, link to websites, and embed images. :::","title":"Lecture Content"},{"location":"block_1/lecture_2/#markdown-syntax","text":"::: notes Markdown is a \"markup language\" which uses symbols to format text. Once you get used to it, markdown is very quick and easy to use, and lets you perform simple formatting tasks as fast as you can type, without the need to click buttons, or worry about margins and text-wrapping. Markdown is automatically understood (parsed) by a number of websites and converted into HTML (hypertext markup language), the basic building block of a website. By writing markdown, a website can render your text as HTML which is then understood by a web browser. In addition, all the styling, spacing and layout is handled by the web-developer allowing you to focus on the content. :::","title":"Markdown Syntax"},{"location":"block_1/lecture_2/#bold-and-italics","text":"Type *Italic* or _Italic_ to get Italic Type **Bold** or __Bold__ to get Bold","title":"Bold and italics"},{"location":"block_1/lecture_2/#blockquotes","text":"Type > Blockquote to get: Blockquote","title":"Blockquotes"},{"location":"block_1/lecture_2/#headings","text":"Use # Heading 1 to ## Heading 2 , ### Heading 3 etc.","title":"Headings"},{"location":"block_1/lecture_2/#links","text":"There are two ways to format links: [An inline link](http://a.com) or [Link][1] This is a good way to record references in a lesson [1]: http://b.org Both appear like this .","title":"Links"},{"location":"block_1/lecture_2/#bullet-lists","text":"Bullet lists can be made with asterix: * a * bullet * list or hyphens: - a - bullet - list which render as: a bullet list","title":"Bullet Lists"},{"location":"block_1/lecture_2/#numbered-lists","text":"A numbered list like so: 1. a 2. numbered 3. list or like so: 1) a 2) numbered 3) list And these render as: 1) a 2) numbered 3) list","title":"Numbered Lists"},{"location":"block_1/lecture_2/#horizontal-rules","text":"You can use a horizontal rule to break up text: --- which looks like this:","title":"Horizontal rules"},{"location":"block_1/lecture_2/#code-blocks","text":"It can be useful to format code or data using code blocks. These are formatted using \"back ticks\" which look like so: `a piece of code` Use triple back ticks around a block of code.","title":"Code blocks"},{"location":"block_1/lecture_2/#edit-a-markdown-document-using-the-github-website","text":"In this section, we will learn how to edit a Markdown document using the Github website.","title":"Edit a Markdown document using the Github website"},{"location":"block_1/lecture_2/#summary","text":"In this module, we learnt Markdown syntax. We then used the Github website to edit a Markdown document, and publish it online. For more information about Markdown, check out the Commonmark website and complete the tutorial .","title":"Summary"},{"location":"block_1/quiz_1/","text":"","title":"Quiz 1"},{"location":"block_1/readme/","text":"Block 1 Learning Objectives Understand the overall structure of a course Explain the difference between a lecture block, mini-lecture, exercise, tutorial and reading Explain the rationale for the emphasis on text and images Use basic Markdown syntax to format text, embed an image and link to other pages Edit a Markdown document using the Github website and view your text rendered as a web page Introduction The CCG project...","title":"Block 1"},{"location":"block_1/readme/#block-1","text":"","title":"Block 1"},{"location":"block_1/readme/#learning-objectives","text":"Understand the overall structure of a course Explain the difference between a lecture block, mini-lecture, exercise, tutorial and reading Explain the rationale for the emphasis on text and images Use basic Markdown syntax to format text, embed an image and link to other pages Edit a Markdown document using the Github website and view your text rendered as a web page","title":"Learning Objectives"},{"location":"block_1/readme/#introduction","text":"The CCG project...","title":"Introduction"}]}